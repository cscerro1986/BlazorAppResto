@page "/categoriaPage"
@page "/categoriaPage/{id:int}"
@inject ICategoriaProductoService CPService;
@inject IEstadoProductoService EPService;

<h3>CategoriaPage</h3>
<div class="container">
    <div class="row">
            <div class="col-md-6">
                 <EditForm Model="categoria" OnSubmit="HandleSubmit">
                    <div class="form-group">
                        <label for="nombre" class="form-control"> Nombre de Categoria</label>
                        <input id="nombre" @bind-value="categoria.NombreCategoria" />
                    </div>
                    
                    <button type="submit" class="btn btn-primary m-2">@btnText</button>
                    @if(Id!=null)
                    {
                        <button class="btn btn-primary m-2" @onclick=DeleteCategoria>Eliminar Categoria</button>        
                    }
                 </EditForm>
            </div>
     </div>
</div>

@code {

    [Parameter]
    public int? Id { get; set; }
    public List<EstadoProducto> estadoss = new List<EstadoProducto>();

    string btnText = String.Empty;

    public CategoriaProducto categoria = new CategoriaProducto();

    protected async override Task  OnInitializedAsync()
    {
        await CPService.GetCategoriaProducto();
    }   
    protected override async Task OnParametersSetAsync()
    {
        if(Id==null)
        {
            btnText = "Create Categoria";
        }
        else
        {            
            btnText = "Update Categoria";
            categoria = await CPService.GetCategoriaProductoByID((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await CPService.CreateCategoriaProducto(categoria);
        }
        else
        {
            await CPService.CreateCategoriaProducto(categoria);
        }
    }
    async Task DeleteCategoria()
    {
        if(Id!= null)
        {
            await CPService.DeleteCategoriaProducto((int)Id);            
        }
    }
}
